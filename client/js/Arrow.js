var Arrow,bind=function(fn,me){return function(){return fn.apply(me,arguments)}};Arrow=function(){function Arrow(user,camera){this.user=user;this.camera=camera;this.calcPoint=bind(this.calcPoint,this);this.draw=bind(this.draw,this);this.update=bind(this.update,this);this.x=0;this.y=0;this.angle=0;this.dis=10;this.opacity=1}Arrow.prototype.update=function(){return this.angle=Math.atan2(this.y-this.camera.y,this.x-this.camera.x)};Arrow.prototype.draw=function(context,canvas){var aa,angle,arrow_dis,camera_bounds,cc,h,point,side1,side2,size,ss,w,x,y;camera_bounds=this.camera.getBounds();if(this.user.x<camera_bounds[0].x||this.user.y<camera_bounds[0].y||this.user.x>camera_bounds[1].x||this.user.y>camera_bounds[1].y){size=4;arrow_dis=100;angle=this.angle;w=canvas.width/2-10;h=canvas.height/2-10;aa=Math.atan(h/w);ss=Math.cos(angle);cc=Math.sin(angle);if((Math.abs(angle)+aa)%Math.PI/2<aa){arrow_dis=w/Math.abs(ss)}else{arrow_dis=h/Math.abs(cc)}x=canvas.width/2+Math.cos(arrow.angle)*arrow_dis;y=canvas.height/2+Math.sin(arrow.angle)*arrow_dis;point=calcPoint(x,y,this.angle,2,size);side1=calcPoint(x,y,this.angle,1.5,size);side2=calcPoint(x,y,this.angle,.5,size);context.fillStyle="rgba(255,255,255,"+arrow.opacity+")";context.beginPath();context.moveTo(point.x,point.y);context.lineTo(side1.x,side1.y);context.lineTo(side2.x,side2.y);context.closePath();return context.fill()}};Arrow.prototype.calcPoint=function(x,y,angle,am,len){return{x:x+Math.cos(angle+Math.PI*am)*len,y:y+Math.sin(angle+Math.PI*am)*len}};return Arrow}();